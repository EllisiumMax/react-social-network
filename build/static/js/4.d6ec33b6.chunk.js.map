{"version":3,"sources":["utils/forms/fieldComponents.jsx","utils/forms/fieldComponents.module.scss","utils/forms/fieldValidator.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/regenerator-runtime/runtime.js","components/LoginWindow/LoginWindow.module.scss","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","components/LoginWindow/LoginWindow.jsx"],"names":["TextArea","input","meta","className","scss","inputWrapper","placeholder","error","touched","errorMessage","InputEmail","type","autoComplete","InputPassword","module","exports","composeValidators","validators","value","reduce","validator","undefined","required","maxLength","length","email","match","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","asyncGeneratorStep","gen","_next","_throw","LoginForm","props","onSubmit","a","login","args","arguments","apply","render","handleSubmit","submitting","pristine","window","container","component","validate","errorMessages","map","msg","serverErrors","captcha","captchaContainer","src","disabled","connect","isLogged","getisLoggedSel","getErrorMessagesSel","errorCodes","getErrorCodesSel","getCaptchaSel","to"],"mappings":"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","file":"static/js/4.d6ec33b6.chunk.js","sourcesContent":["import React from \"react\";\r\nimport scss from \"./fieldComponents.module.scss\";\r\n\r\nexport const TextArea = ({ input, meta }) => (\r\n  <div>\r\n    <div className={scss.inputWrapper}>\r\n      <textarea {...input} placeholder=\"Please enter your text here\" />\r\n      {meta.error && meta.touched && (\r\n        <span className={scss.errorMessage}> &#9888; {meta.error}</span>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const InputEmail = ({ input, meta }) => (\r\n  <div>\r\n    <div className={scss.inputWrapper}>\r\n      <input {...input} type=\"email\" placeholder=\"Email\" autoComplete=\"off\" />\r\n      {meta.error && meta.touched && (\r\n        <span className={scss.errorMessage}> &#9888; {meta.error}</span>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport const InputPassword = ({ input, meta }) => (\r\n  <div>\r\n    <div className={scss.inputWrapper}>\r\n      <input {...input} type=\"password\" placeholder=\"Password\" />\r\n      {meta.error && meta.touched && (\r\n        <span className={scss.errorMessage}> &#9888; {meta.error}</span>\r\n      )}\r\n    </div>\r\n  </div>\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"fieldComponents_inputWrapper__1KlTK\",\"errorMessage\":\"fieldComponents_errorMessage__1Tnfx\",\"background\":\"fieldComponents_background__2GTi7\"};","export const composeValidators = (...validators) => (value) =>\r\n  validators.reduce((error, validator) => error || validator(value), undefined);\r\n\r\nexport const required = (value) =>\r\n  value ? undefined : \"This field can't be empty\";\r\n\r\nexport const mustBeNumber = (value) =>\r\n  isNaN(value) ? \"Must contain only numbers\" : undefined;\r\n\r\nexport const mustBeNotNumber = (value) =>\r\n  !isNaN(value) ? \"Must contain not contain numbers\" : undefined;\r\n\r\nexport const maxLength = (length) => (value) =>\r\n  value && value.length > length\r\n    ? `Maximum length not more than ${length} symbols`\r\n    : undefined;\r\n\r\nexport const minLength = (length) => (value) =>\r\n  value && value.length < length\r\n    ? `Minimum length not less than ${length} symbols`\r\n    : undefined;\r\n\r\nexport const onlyLetters = (value) =>\r\n  value.match(/[a-zA-Z\\s]+/gim) ? undefined : \"Must be not a number\";\r\n\r\nexport const email = (value) =>\r\n  value.match(/^\\S+@\\S+\\.\\S+$/gi) ? undefined : \"Email not valid\";\r\n","module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"window\":\"LoginWindow_window__2JKvS\",\"container\":\"LoginWindow_container__3eZUA\",\"serverErrors\":\"LoginWindow_serverErrors__VTs25\",\"background\":\"LoginWindow_background__2zn6x\",\"captchaContainer\":\"LoginWindow_captchaContainer__3zwhc\",\"captcha\":\"LoginWindow_captcha__32g8S\"};","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from \"react\";\r\nimport { Field, Form } from \"react-final-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router\";\r\nimport { login } from \"redux/authReducer\";\r\nimport {\r\n  getCaptchaSel,\r\n  getErrorCodesSel,\r\n  getErrorMessagesSel,\r\n  getisLoggedSel,\r\n} from \"redux/loginSelectors\";\r\nimport { InputEmail, InputPassword } from \"utils/forms/fieldComponents\";\r\nimport { composeValidators, email, required } from \"utils/forms/fieldValidator\";\r\nimport scss from \"./LoginWindow.module.scss\";\r\n\r\nfunction LoginWindow(props) {\r\n  return props.isLogged ? <Redirect to=\"profile\" /> : <LoginForm {...props} />;\r\n}\r\n\r\nconst LoginForm = (props) => (\r\n  <Form\r\n    onSubmit={async (obj) => {\r\n      props.login(obj);\r\n    }}\r\n    render={({ handleSubmit, submitting, pristine }) => (\r\n      <div className={scss.window}>\r\n        <form onSubmit={handleSubmit} className={scss.container}>\r\n          <h1>Login</h1>\r\n          <Field\r\n            name=\"email\"\r\n            component={InputEmail}\r\n            validate={composeValidators(required, email)}\r\n          />\r\n          <Field\r\n            name=\"password\"\r\n            component={InputPassword}\r\n            validate={required}\r\n          />\r\n          <div>\r\n            <Field name=\"rememberMe\" component=\"input\" type=\"checkbox\" />\r\n            <label> Remember me?</label>\r\n          </div>\r\n\r\n          {props.errorMessages\r\n            ? props.errorMessages.map((msg) => (\r\n                <div className={scss.serverErrors}>{msg}</div>\r\n              ))\r\n            : null}\r\n          {props.captcha ? (\r\n            <div className={scss.captchaContainer}>\r\n              <img className={scss.captcha} src={props.captcha}></img>\r\n              <Field\r\n                component=\"input\"\r\n                type=\"input\"\r\n                name=\"captcha\"\r\n                autoComplete=\"off\"\r\n                placeholder=\"CAPTCHA\"\r\n                maxLength={7}\r\n              />\r\n            </div>\r\n          ) : null}\r\n\r\n          <button type=\"submit\" disabled={submitting || pristine}>\r\n            Submit\r\n          </button>\r\n        </form>\r\n      </div>\r\n    )}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = (state) => ({\r\n  isLogged: getisLoggedSel(state),\r\n  errorMessages: getErrorMessagesSel(state),\r\n  errorCodes: getErrorCodesSel(state),\r\n  captcha: getCaptchaSel(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, { login })(LoginWindow);\r\n"],"sourceRoot":""}